/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import function.Function;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.GridLayout;
import java.awt.Window;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import java.nio.file.Path;
import java.sql.Date;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTree;
import javax.swing.border.Border;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeCellRenderer;
import javax.swing.tree.TreePath;
import network.Request;
import network.ClientRequest;
import userData.Message;
import userData.StatusMessage;

/**
 *
 * @author gauthier
 */
public class InterfaceClient extends javax.swing.JFrame {
	private static final long serialVersionUID =1L;
	private Client client;
	private boolean retry;
	private CardLayout cview;
	// login user actually connected
	private String actualUser;

	private String tag =Function.color(this);

	/**
	 * Creates new form Interface
	 */
	public InterfaceClient() {
		initComponents();

		this.setTitle("client application");
		this.setSize(1600, 900);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.setLocationRelativeTo(null);
		this.setResizable(false);

		this.setVisible(true);

		new Thread() {
			@Override
			public void run() {
				serverConnect();
			}
		}.start();
	}

	public void show(String tag) {
		cview.show(view, tag);
	}

	public void serverConnect() {
		InterfaceClient ihm =this;
		show("connect");

		new Thread() {
			public void run() {
				temporize();
				try {
					String ip =serverNotFound_ip.getText();
					int port =Integer.parseInt(serverNotFound_port.getText());
					client = new Client(ip, port, ihm);

					show("identification");
				} catch (IOException ex) {
					Logger.getLogger(InterfaceClient.class.getName()).log(Level.SEVERE, null, ex);

					show("serverNotFound");
					serverNotFound_console.setText(ex.getMessage());
				}
			}
		}.start();
	}

	private void temporize() {
		try {
			Thread.sleep(500);
		} catch (InterruptedException ex) {
			Logger.getLogger(InterfaceClient.class.getName()).log(Level.SEVERE, null, ex);
		}
	}

//		boolean connected =false;
//		while (! connected) {
//			try {
//				try {
//					Thread.sleep(1000);
//				} catch (InterruptedException ex) {
//					Logger.getLogger(InterfaceClient.class.getName()).log(Level.SEVERE, null, ex);
//				}
//
//				client = new Client("127.0.0.1", 5000, this);
//				connected =true;
//
//
//			} catch (IOException ex) {
//				Logger.getLogger(InterfaceClient.class.getName()).log(Level.SEVERE, null, ex);
//				f_serverNotFound.setVisible(true);
//				serverConnect.setVisible(false);
//
//				retry =false;
//				while (! retry) {
//					try {
//						Thread.sleep(1000);
//					} catch (InterruptedException ex1) {
//						Logger.getLogger(InterfaceClient.class.getName()).log(Level.SEVERE, null, ex1);
//					}
//				}
//				serverConnect.setVisible(true);
//				f_serverNotFound.setVisible(false);
//			}
//		}
//
//		f_identification.setVisible(true);
//		serverConnect.setVisible(false);
//
//

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        view = new javax.swing.JPanel();
        view_connect = new javax.swing.JLabel();
        view_serverNotFound = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        serverNotFound_port = new javax.swing.JTextField();
        serverNotFound_ip = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        serverNotFound_console = new javax.swing.JTextPane();
        view_identification = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        passwdInput = new javax.swing.JPasswordField();
        identification_login = new javax.swing.JTextField();
        identification_connection = new javax.swing.JButton();
        identification_newUser = new javax.swing.JButton();
        home_wrong = new javax.swing.JLabel();
        logo = new javax.swing.JLabel();
        view_newUser = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        inputName = new javax.swing.JTextField();
        inputPasswd = new javax.swing.JPasswordField();
        inputStatus = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        newUser_create = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        newUser_name = new javax.swing.JTextField();
        newUser_firstName = new javax.swing.JTextField();
        newUser_email = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        newUser_console = new javax.swing.JTextArea();
        view_home = new javax.swing.JPanel();
        home_tickets = new javax.swing.JScrollPane();
        tree = new javax.swing.JTree();
        home_right = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        home_userName = new javax.swing.JLabel();
        home_group = new javax.swing.JButton();
        home_leave = new javax.swing.JButton();
        home_newTicket = new javax.swing.JButton();
        right_messagesScroll = new javax.swing.JScrollPane();
        right_messages = new javax.swing.JPanel();
        messages_box1 = new javax.swing.JPanel();
        box1_autor = new javax.swing.JLabel();
        box1_date = new javax.swing.JLabel();
        box1_scroll_body = new javax.swing.JScrollPane();
        box1_body = new javax.swing.JTextPane();
        box1_hour = new javax.swing.JLabel();
        messageUsersStatus = new javax.swing.JScrollPane();
        messageUsersStatusTable = new javax.swing.JTable();
        right_newMessage = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        newMessage_input = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        newMessage_send = new javax.swing.JButton();
        view_group = new javax.swing.JPanel();
        group_sown = new javax.swing.JScrollPane();
        group_own = new javax.swing.JTable();
        group_swap = new javax.swing.JButton();
        group_sother = new javax.swing.JScrollPane();
        group_other = new javax.swing.JTable();
        group_back = new javax.swing.JButton();
        view_newTicket = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        new_ticketBody = new javax.swing.JTextArea();
        newTicket_back = new javax.swing.JButton();
        newTicket_send = new javax.swing.JButton();
        newTicket_title = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        newTicket_group = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(20, 20));
        getContentPane().setLayout(new java.awt.CardLayout());

        view.setLayout(new java.awt.CardLayout());

        view_connect.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        view_connect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/serverConnect.gif"))); // NOI18N
        view_connect.setMaximumSize(new java.awt.Dimension(10000, 10000));
        view_connect.setMinimumSize(new java.awt.Dimension(0, 0));
        view.add(view_connect, "connect");

        view_serverNotFound.setPreferredSize(new java.awt.Dimension(0, 0));
        view_serverNotFound.setLayout(new java.awt.BorderLayout());

        jButton1.setText("retry");
        jButton1.setMinimumSize(new java.awt.Dimension(0, 0));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/serverNotFound.png"))); // NOI18N
        jLabel3.setMinimumSize(new java.awt.Dimension(0, 0));

        jLabel1.setText("ip");

        jLabel2.setText("port");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(46, 46, 46)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(serverNotFound_port, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serverNotFound_ip, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(serverNotFound_ip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(serverNotFound_port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        serverNotFound_port.setText("5000");
        serverNotFound_ip.setText("127.0.0.1");

        view_serverNotFound.add(jPanel2, java.awt.BorderLayout.CENTER);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(0, 100));
        jScrollPane1.setViewportView(serverNotFound_console);

        view_serverNotFound.add(jScrollPane1, java.awt.BorderLayout.SOUTH);

        view.add(view_serverNotFound, "serverNotFound");

        view_identification.setBackground(new java.awt.Color(188, 7, 46));
        view_identification.setPreferredSize(new java.awt.Dimension(0, 0));

        jLabel4.setText("login");

        jLabel5.setText("passwd");

        passwdInput.setText("fuck");
        passwdInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwdInputActionPerformed(evt);
            }
        });

        identification_login.setText("gauthier");

        identification_connection.setText("connection");
        identification_connection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                identification_connectionActionPerformed(evt);
            }
        });

        identification_newUser.setText("new user");
        identification_newUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                identification_newUserActionPerformed(evt);
            }
        });

        home_wrong.setForeground(new java.awt.Color(255, 0, 0));
        home_wrong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/wrong.png"))); // NOI18N
        home_wrong.setText("wrong login or password");

        logo.setForeground(new java.awt.Color(255, 0, 0));
        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/logo.png"))); // NOI18N

        javax.swing.GroupLayout view_identificationLayout = new javax.swing.GroupLayout(view_identification);
        view_identification.setLayout(view_identificationLayout);
        view_identificationLayout.setHorizontalGroup(
            view_identificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(view_identificationLayout.createSequentialGroup()
                .addContainerGap(275, Short.MAX_VALUE)
                .addGroup(view_identificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(view_identificationLayout.createSequentialGroup()
                        .addGroup(view_identificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(41, 41, 41)
                        .addGroup(view_identificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(identification_login, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwdInput, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(view_identificationLayout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(logo))))
                    .addGroup(view_identificationLayout.createSequentialGroup()
                        .addComponent(identification_connection)
                        .addGap(214, 214, 214)
                        .addComponent(identification_newUser)
                        .addGap(37, 37, 37)
                        .addComponent(home_wrong)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        view_identificationLayout.setVerticalGroup(
            view_identificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(view_identificationLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(logo)
                .addGap(112, 112, 112)
                .addGroup(view_identificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(identification_login, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(view_identificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwdInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(view_identificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, view_identificationLayout.createSequentialGroup()
                        .addGroup(view_identificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(identification_connection)
                            .addComponent(identification_newUser))
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, view_identificationLayout.createSequentialGroup()
                        .addComponent(home_wrong)
                        .addGap(42, 42, 42))))
        );

        home_wrong.setVisible(false);
        home_wrong.setVisible(false);

        view.add(view_identification, "identification");

        view_newUser.setPreferredSize(new java.awt.Dimension(0, 0));

        jLabel6.setText("login");

        jLabel8.setText("password");

        inputStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "student", "professor", "service" }));

        jLabel12.setText("status");

        newUser_create.setText("create new user");
        newUser_create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newUser_createActionPerformed(evt);
            }
        });

        jButton5.setText("back");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel7.setText("firstName");

        jLabel9.setText("name");

        jLabel15.setText("email");

        newUser_console.setColumns(20);
        newUser_console.setRows(5);
        jScrollPane3.setViewportView(newUser_console);

        javax.swing.GroupLayout view_newUserLayout = new javax.swing.GroupLayout(view_newUser);
        view_newUser.setLayout(view_newUserLayout);
        view_newUserLayout.setHorizontalGroup(
            view_newUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(view_newUserLayout.createSequentialGroup()
                .addContainerGap(343, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(view_newUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(view_newUserLayout.createSequentialGroup()
                        .addComponent(inputStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(491, Short.MAX_VALUE))
                    .addGroup(view_newUserLayout.createSequentialGroup()
                        .addComponent(newUser_create)
                        .addGap(226, 226, 226)
                        .addComponent(jButton5)
                        .addGap(0, 137, Short.MAX_VALUE))))
            .addGroup(view_newUserLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
            .addGroup(view_newUserLayout.createSequentialGroup()
                .addGap(323, 323, 323)
                .addGroup(view_newUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(view_newUserLayout.createSequentialGroup()
                        .addGroup(view_newUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, view_newUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel6)
                                .addComponent(jLabel8)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(view_newUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inputPasswd)
                            .addComponent(inputName, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                            .addComponent(newUser_firstName)
                            .addComponent(newUser_name)))
                    .addGroup(view_newUserLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(newUser_email, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        view_newUserLayout.setVerticalGroup(
            view_newUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(view_newUserLayout.createSequentialGroup()
                .addContainerGap(75, Short.MAX_VALUE)
                .addGroup(view_newUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(12, 12, 12)
                .addGroup(view_newUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(inputPasswd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(view_newUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(newUser_firstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(view_newUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newUser_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(view_newUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newUser_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(21, 21, 21)
                .addGroup(view_newUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(45, 45, 45)
                .addGroup(view_newUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newUser_create)
                    .addComponent(jButton5))
                .addGap(75, 75, 75)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        view.add(view_newUser, "newUser");

        view_home.setMaximumSize(new java.awt.Dimension(10000, 10000));
        view_home.setMinimumSize(new java.awt.Dimension(0, 0));
        view_home.setLayout(new java.awt.BorderLayout(10, 10));

        home_tickets.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tree.setMaximumSize(new java.awt.Dimension(10000, 10000));
        tree.setMinimumSize(new java.awt.Dimension(300, 0));
        tree.setPreferredSize(new java.awt.Dimension(300, 0));
        home_tickets.setViewportView(tree);

        view_home.add(home_tickets, java.awt.BorderLayout.WEST);

        home_right.setLayout(new java.awt.BorderLayout(10, 10));

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(0, 50));

        home_userName.setText("login");

        home_group.setText("add/remove  group");
        home_group.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                home_groupActionPerformed(evt);
            }
        });

        home_leave.setText("leave");
        home_leave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                home_leaveActionPerformed(evt);
            }
        });

        home_newTicket.setText("new ticket");
        home_newTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                home_newTicketActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(home_userName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(home_group)
                .addGap(61, 61, 61)
                .addComponent(home_newTicket)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                .addComponent(home_leave)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(home_group)
                    .addComponent(home_userName)
                    .addComponent(home_leave)
                    .addComponent(home_newTicket))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        home_right.add(jPanel1, java.awt.BorderLayout.NORTH);

        right_messagesScroll.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        right_messages.setLayout(new java.awt.GridLayout(10, 1, 0, 5));

        messages_box1.setBackground(new java.awt.Color(204, 255, 204));
        messages_box1.setPreferredSize(new java.awt.Dimension(0, 100));
        messages_box1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                messages_box1MouseClicked(evt);
            }
        });

        box1_autor.setText("gauthier");

        box1_date.setText("date");

        box1_scroll_body.setBorder(null);
        box1_scroll_body.setViewportView(box1_body);

        box1_hour.setText("hour");

        javax.swing.GroupLayout messages_box1Layout = new javax.swing.GroupLayout(messages_box1);
        messages_box1.setLayout(messages_box1Layout);
        messages_box1Layout.setHorizontalGroup(
            messages_box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(messages_box1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(box1_autor)
                .addGap(41, 41, 41)
                .addComponent(box1_scroll_body, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(messages_box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(box1_date)
                    .addComponent(box1_hour))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        messages_box1Layout.setVerticalGroup(
            messages_box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, messages_box1Layout.createSequentialGroup()
                .addGap(0, 21, Short.MAX_VALUE)
                .addGroup(messages_box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(box1_autor)
                    .addGroup(messages_box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(messages_box1Layout.createSequentialGroup()
                            .addComponent(box1_date)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(box1_hour))
                        .addComponent(box1_scroll_body, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
        );

        right_messages.add(messages_box1);

        right_messagesScroll.setViewportView(right_messages);

        home_right.add(right_messagesScroll, java.awt.BorderLayout.CENTER);

        messageUsersStatus.setPreferredSize(new java.awt.Dimension(300, 0));

        messageUsersStatusTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "user", "status"
            }
        ));
        messageUsersStatus.setViewportView(messageUsersStatusTable);

        home_right.add(messageUsersStatus, java.awt.BorderLayout.LINE_END);

        right_newMessage.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        right_newMessage.setPreferredSize(new java.awt.Dimension(0, 200));

        newMessage_input.setColumns(20);
        newMessage_input.setRows(5);
        newMessage_input.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                newMessage_inputKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(newMessage_input);

        jLabel10.setText("new message");

        newMessage_send.setText("send");
        newMessage_send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMessage_sendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout right_newMessageLayout = new javax.swing.GroupLayout(right_newMessage);
        right_newMessage.setLayout(right_newMessageLayout);
        right_newMessageLayout.setHorizontalGroup(
            right_newMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(right_newMessageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(right_newMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, right_newMessageLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 614, Short.MAX_VALUE)
                    .addGroup(right_newMessageLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(newMessage_send)))
                .addContainerGap())
        );
        right_newMessageLayout.setVerticalGroup(
            right_newMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, right_newMessageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 28, Short.MAX_VALUE)
                .addComponent(newMessage_send)
                .addContainerGap())
        );

        home_right.add(right_newMessage, java.awt.BorderLayout.SOUTH);

        view_home.add(home_right, java.awt.BorderLayout.CENTER);

        view.add(view_home, "home");

        group_own.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "own group"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        group_sown.setViewportView(group_own);

        group_swap.setText("swap");
        group_swap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                group_swapActionPerformed(evt);
            }
        });

        group_other.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "other group"
            }
        ));
        group_sother.setViewportView(group_other);

        group_back.setText("back");
        group_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                group_backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout view_groupLayout = new javax.swing.GroupLayout(view_group);
        view_group.setLayout(view_groupLayout);
        view_groupLayout.setHorizontalGroup(
            view_groupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(view_groupLayout.createSequentialGroup()
                .addContainerGap(210, Short.MAX_VALUE)
                .addComponent(group_sown, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(group_swap)
                .addGap(18, 18, 18)
                .addComponent(group_sother, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(210, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, view_groupLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(group_back)
                .addContainerGap())
        );
        view_groupLayout.setVerticalGroup(
            view_groupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, view_groupLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(group_back)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(view_groupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(group_sown)
                    .addComponent(group_sother)
                    .addComponent(group_swap, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        view.add(view_group, "group");

        new_ticketBody.setColumns(20);
        new_ticketBody.setRows(5);
        jScrollPane4.setViewportView(new_ticketBody);

        newTicket_back.setText("back");
        newTicket_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newTicket_backActionPerformed(evt);
            }
        });

        newTicket_send.setText("send");
        newTicket_send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newTicket_sendActionPerformed(evt);
            }
        });

        jLabel11.setText("title");

        jLabel13.setText("message");

        newTicket_group.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel14.setText("group");

        javax.swing.GroupLayout view_newTicketLayout = new javax.swing.GroupLayout(view_newTicket);
        view_newTicket.setLayout(view_newTicketLayout);
        view_newTicketLayout.setHorizontalGroup(
            view_newTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(view_newTicketLayout.createSequentialGroup()
                .addContainerGap(107, Short.MAX_VALUE)
                .addGroup(view_newTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(newTicket_send)
                    .addGroup(view_newTicketLayout.createSequentialGroup()
                        .addGroup(view_newTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(view_newTicketLayout.createSequentialGroup()
                                .addGroup(view_newTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(view_newTicketLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newTicket_group, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)))
                        .addGroup(view_newTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newTicket_title, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(245, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, view_newTicketLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(newTicket_back)
                .addContainerGap())
        );
        view_newTicketLayout.setVerticalGroup(
            view_newTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(view_newTicketLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newTicket_back)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(view_newTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newTicket_title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(view_newTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(view_newTicketLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(52, 52, 52)
                        .addGroup(view_newTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(newTicket_group, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(newTicket_send)
                .addContainerGap(110, Short.MAX_VALUE))
        );

        view.add(view_newTicket, "newTicket");

        getContentPane().add(view, "card8");
        cview =(CardLayout)view.getLayout();

        pack();
    }// </editor-fold>//GEN-END:initComponents

        private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		serverConnect();
        }//GEN-LAST:event_jButton1ActionPerformed

        private void passwdInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwdInputActionPerformed
                // TODO add your handling code here:
        }//GEN-LAST:event_passwdInputActionPerformed

        private void identification_connectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_identification_connectionActionPerformed
		String login = identification_login.getText();
		char[] str = passwdInput.getPassword();
		String passwd ="";
		for (char c : str) {
			passwd +=c;
		}

		client.sendRequest(ClientRequest.IDENTIFICATION, login, passwd);
        }//GEN-LAST:event_identification_connectionActionPerformed

        private void identification_newUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_identification_newUserActionPerformed
		view_newUser.setVisible(true);
		view_identification.setVisible(false);
        }//GEN-LAST:event_identification_newUserActionPerformed

        private void newUser_createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newUser_createActionPerformed
                // TODO add your handling code here:
		String login = inputName.getText();
		char[] str = inputPasswd.getPassword();
		String passwd ="";
		for (char c : str) {
			passwd +=c;
		}
		String firstName = newUser_firstName.getText();
		String name =newUser_name.getText();
                String email=newUser_email.getText();
		String status = inputStatus.getSelectedItem().toString();
                //client.sendRequest(ClientRequest.NEW_USER, login, passwd, firstName, name, status);
                
                String url="https://join.university-request.fr/email/?email="+email+"&login="+login+"&pswd="+passwd+"&fstnm="+firstName+"&nm="+name+"&status="+status;
                
                String retour=null;
                
                // gauthier tu checkera comment bien faire le try/catch
                try {
                    retour = get(url);

                } catch (IOException ex) {
                    Logger.getLogger(InterfaceClient.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                // Vérification du résultat
                
                switch (retour){
                    case "ok" :
                        
                        
                        
                        try {
                            Thread.sleep(3000);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(InterfaceClient.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        view_newUser.setVisible(false);
                        view_identification.setVisible(true);
                
                        break;
                        
                    case "ko" : // L'email n'a pas été envoyé
                        
                        break;
                        
                    default : // Erreur
                        
                }

        }//GEN-LAST:event_newUser_createActionPerformed

        private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
		view_identification.setVisible(true);
		view_newUser.setVisible(false);
        }//GEN-LAST:event_jButton5ActionPerformed

        private void home_groupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_home_groupActionPerformed
		show("group");

//		client.sendRequest(ClientRequest.ALL_GROUP, identification_login.getText());
		client.sendRequest(ClientRequest.ALL_GROUP);
        }//GEN-LAST:event_home_groupActionPerformed

        private void group_swapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_group_swapActionPerformed
		
		int row =group_own.getSelectedRow();
		int column =group_own.getSelectedColumn();
		System.out.println(row +"" +column);
		if (row >=0 && column >=0) {
			String ownGroupSelected =(String)group_own.getValueAt(row, column);
			System.out.println("ownGroup " +ownGroupSelected);

			client.sendRequest(ClientRequest.DEL_GROUP, ownGroupSelected);
		}
		else {
			row =group_other.getSelectedRow();
			column =group_other.getSelectedColumn();
			System.out.println(row +"" +column);

			if (row >=0 && column >=0) {
				String otherGroupSelected =(String)group_other.getValueAt(row, column);
				System.out.println("otherGroup " +otherGroupSelected);

				client.sendRequest(ClientRequest.ADD_GROUP, otherGroupSelected);
			}
		}
        }//GEN-LAST:event_group_swapActionPerformed

        private void group_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_group_backActionPerformed
                // TODO add your handling code here:
		majTree();
		show("home");
        }//GEN-LAST:event_group_backActionPerformed

        private void home_leaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_home_leaveActionPerformed
		show("identification");
        }//GEN-LAST:event_home_leaveActionPerformed

        private void newMessage_sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMessage_sendActionPerformed
		newMessage_input_sendMessage();
        }//GEN-LAST:event_newMessage_sendActionPerformed

        private void newMessage_inputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newMessage_inputKeyPressed
		// send message with tab input
		if (evt.getKeyCode() == 9) {
			newMessage_input_sendMessage();
		}
        }//GEN-LAST:event_newMessage_inputKeyPressed

        private void messages_box1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_messages_box1MouseClicked
                // TODO add your handling code here:
		System.out.println("fuck");
        }//GEN-LAST:event_messages_box1MouseClicked

        private void home_newTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_home_newTicketActionPerformed
		client.sendRequest(ClientRequest.ALL_GROUP_FOR_TICKET);

        }//GEN-LAST:event_home_newTicketActionPerformed

        private void newTicket_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newTicket_backActionPerformed
                // TODO add your handling code here:
		show("home");
        }//GEN-LAST:event_newTicket_backActionPerformed

        private void newTicket_sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newTicket_sendActionPerformed
		String title =newTicket_title.getText();
		String author =actualUser;
		String group =newTicket_group.getSelectedItem().toString();
		String bodyMessage =new_ticketBody.getText();
		client.sendRequest(ClientRequest.NEW_TICKET, title, author, group, bodyMessage);
		show("home");
//		tree.setSelectionRow(indexOfAlreadyClicked);
        }//GEN-LAST:event_newTicket_sendActionPerformed

	public void newTicketPrint(String[] ls) {
		show("newTicket");
		newTicket_group.setModel(new javax.swing.DefaultComboBoxModel<>(ls));
	}

	public void newMessage_input_sendMessage() {
		int id =-1;
		String body =newMessage_input.getText();
		Timestamp create =new Timestamp(System.currentTimeMillis());
		String author =identification_login.getText();
//		String ticket =(String)tree.getLastSelectedPathComponent().toString();
		String ticket =actualTicket();
		String group ="";
		String firstname ="";
		String name ="";

		Message m =new Message(id, body, create, author, firstname, name, ticket, group, StatusMessage. SERVER_NOT_RECEIVE, null);

		client.addMessage(m);
		buildMessagesPane(ticket);
		client.delMessage(m);

		new Thread() {
			@Override
			public void run() {
				try {
					Thread.sleep(1000);
				} catch (InterruptedException ex) {
					Logger.getLogger(InterfaceClient.class.getName()).log(Level.SEVERE, null, ex);
				}
				client.sendRequest(ClientRequest.NEW_MESSAGE, m);
			}
		}.start();
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(InterfaceClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(InterfaceClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(InterfaceClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(InterfaceClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new InterfaceClient().setVisible(true);
			}
		});

//		InterfaceClient ihm = new InterfaceClient();
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel box1_autor;
    private javax.swing.JTextPane box1_body;
    private javax.swing.JLabel box1_date;
    private javax.swing.JLabel box1_hour;
    private javax.swing.JScrollPane box1_scroll_body;
    private javax.swing.JButton group_back;
    private javax.swing.JTable group_other;
    private javax.swing.JTable group_own;
    private javax.swing.JScrollPane group_sother;
    private javax.swing.JScrollPane group_sown;
    private javax.swing.JButton group_swap;
    private javax.swing.JButton home_group;
    private javax.swing.JButton home_leave;
    private javax.swing.JButton home_newTicket;
    private javax.swing.JPanel home_right;
    private javax.swing.JScrollPane home_tickets;
    private javax.swing.JLabel home_userName;
    private javax.swing.JLabel home_wrong;
    private javax.swing.JButton identification_connection;
    private javax.swing.JTextField identification_login;
    private javax.swing.JButton identification_newUser;
    private javax.swing.JTextField inputName;
    private javax.swing.JPasswordField inputPasswd;
    private javax.swing.JComboBox<String> inputStatus;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel logo;
    private javax.swing.JScrollPane messageUsersStatus;
    private javax.swing.JTable messageUsersStatusTable;
    private javax.swing.JPanel messages_box1;
    private javax.swing.JTextArea newMessage_input;
    private javax.swing.JButton newMessage_send;
    private javax.swing.JButton newTicket_back;
    private javax.swing.JComboBox<String> newTicket_group;
    private javax.swing.JButton newTicket_send;
    private javax.swing.JTextField newTicket_title;
    private javax.swing.JTextArea newUser_console;
    private javax.swing.JButton newUser_create;
    private javax.swing.JTextField newUser_email;
    private javax.swing.JTextField newUser_firstName;
    private javax.swing.JTextField newUser_name;
    private javax.swing.JTextArea new_ticketBody;
    private javax.swing.JPasswordField passwdInput;
    private javax.swing.JPanel right_messages;
    private javax.swing.JScrollPane right_messagesScroll;
    private javax.swing.JPanel right_newMessage;
    private javax.swing.JTextPane serverNotFound_console;
    private javax.swing.JTextField serverNotFound_ip;
    private javax.swing.JTextField serverNotFound_port;
    private javax.swing.JTree tree;
    private javax.swing.JPanel view;
    private javax.swing.JLabel view_connect;
    private javax.swing.JPanel view_group;
    private javax.swing.JPanel view_home;
    private javax.swing.JPanel view_identification;
    private javax.swing.JPanel view_newTicket;
    private javax.swing.JPanel view_newUser;
    private javax.swing.JPanel view_serverNotFound;
    // End of variables declaration//GEN-END:variables


	// getters
	public JPanel getHome() {
		return view_home;
	}

	public JLabel getHome_userName() {
		return home_userName;
	}

	public JLabel getHome_wrong() {
		return home_wrong;
	}

	public JPanel getIdentification() {
		return view_identification;
	}

	void majTree() {
		// already click
		String ticketAlreadyClicked =actualTicket();
		int indexOfAlreadyClicked =0;

		DefaultMutableTreeNode root = new DefaultMutableTreeNode("posts");
		int cpt =2;
		for (String g : client.getGroups()) {
			DefaultMutableTreeNode group = new DefaultMutableTreeNode("" +g +" (" +client.nbNotReadMessageInGroup(g, actualUser) +")");
			for (String t : client.getTicket(g)) {
				DefaultMutableTreeNode ticket =new DefaultMutableTreeNode(t +" (" +client.nbNotReadMessageOfTicket(t, actualUser) +")");
				group.add(ticket);

				if (t.equals(ticketAlreadyClicked))
					indexOfAlreadyClicked =cpt;

				cpt++;
			}
			root.add(group);
			cpt++;
		}

		tree = new JTree(root);
		tree.addMouseListener(new MouseAdapter() {
			public void mouseClicked(MouseEvent me) {
//				TreePath tp =tree.getPathForLocation(me.getX(), me.getY());
//				System.out.println(tp);
//				String ticket =(String)tree.getLastSelectedPathComponent().toString();
				String ticket =actualTicket();
				System.out.println(ticket);

//				right_messages =new JPanel();
//				right_messages.setLayout(null);
				
//				buildMessagesPane(ticket);

				readMessagesOfTicket(ticket);
			}

		});
		expandAll(tree);
		tree.setCellRenderer(new DefaultTreeCellRenderer() {
			@Override
			public Component getTreeCellRendererComponent(JTree tree, Object value, boolean sel, boolean expanded, boolean leaf, int row, boolean hasFocus) {
				String text =value.toString();
				int len =text.length();
				StringBuffer html;
				if (text.substring(len -3, len).equals("(0)")) {
					html =new StringBuffer(text);
				}
				else {
					html =new StringBuffer("<html><b>" +text +"</b></html>");
				}
				return super.getTreeCellRendererComponent(tree, html.toString(), sel, expanded, leaf, row, hasFocus); //To change body of generated methods, choose Tools | Templates.
			}
			
		});

		right_messages.removeAll();
		right_messagesScroll.setViewportView(right_messages);
		right_newMessage.setVisible(false);

                home_tickets.setViewportView(tree);


		if (ticketAlreadyClicked != "") {
			buildMessagesPane(ticketAlreadyClicked);
//			System.out.println(indexOfAlreadyClicked);
			tree.setSelectionRow(indexOfAlreadyClicked);
		}

//		messageUsersStatus.setVisible(false);


//		jScrollPane1.removeAll();
//		jScrollPane1.add(tree)
//		jScrollPane1.revalidate();
	}

	private void readMessagesOfTicket(String ticket) {
		List<Integer> idMessages =new ArrayList<>();

		for (Message m : client.getTicketMessages(ticket)) {
			if (! m.isAlreadyReadBy(actualUser)) {
				idMessages.add(m.getId());
			}
		}

		client.sendRequest(ClientRequest.READ_MESSAGES, actualUser, idMessages);
	}
	
	
	public void buildMessagesPane(String ticket) {
		int nbTickets =client.getTicketMessages(ticket).size();
		if (nbTickets < 5)
			nbTickets =5;
		right_messages.setLayout(new java.awt.GridLayout(nbTickets, 1, 0, 20));

		right_messages.removeAll();
		for (Message m : client.getTicketMessages(ticket)) {
			right_messages.add(createBoxMessage(m));
		}
		
		
		right_newMessage.setVisible(true);
		right_messagesScroll.setViewportView(right_messages);

		newMessage_input.setText("");
		newMessage_input.requestFocus();

		JScrollBar vertical =right_messagesScroll.getVerticalScrollBar();
		vertical.setValue(vertical.getMaximum());


		new Thread() {
			@Override
			public void run() {
				try {
					sleep(10);
				} catch (InterruptedException ex) {
					Logger.getLogger(InterfaceClient.class.getName()).log(Level.SEVERE, null, ex);
				}
				JScrollBar vertical =right_messagesScroll.getVerticalScrollBar();
				vertical.setValue(vertical.getMaximum());
			}
		}.start();
	}
	
	public JPanel createBoxMessage(Message m) {
		JPanel messages_box1 =new JPanel();
		JLabel box1_autor =new JLabel();
		JLabel box1_date =new JLabel();
		JLabel box1_hour =new JLabel();
		JTextArea box1_body =new JTextArea();
		JScrollPane box1_scroll_body =new JScrollPane();


                box1_autor.setText(m.getAuthor());
		box1_body.setText(m.getBody());
                box1_date.setText(m.getCreate().toString().substring(0, 10));
		box1_hour.setText(m.getCreate().toString().substring(11, 19));
                messages_box1.setBackground(m.stateColor());


                messages_box1.setPreferredSize(new java.awt.Dimension(0, 100));
                messages_box1.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
				System.out.println(m.getId());
				majTableMessageUsersStatus(m);
                        }
                });
                box1_scroll_body.setBorder(null);
                box1_scroll_body.setViewportView(box1_body);


                javax.swing.GroupLayout messages_box1Layout = new javax.swing.GroupLayout(messages_box1);
                messages_box1.setLayout(messages_box1Layout);
                messages_box1Layout.setHorizontalGroup(
                        messages_box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(messages_box1Layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(box1_autor)
                                .addGap(41, 41, 41)
                                .addComponent(box1_scroll_body, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addGroup(messages_box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(box1_date)
                                        .addComponent(box1_hour))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );
                messages_box1Layout.setVerticalGroup(
                        messages_box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, messages_box1Layout.createSequentialGroup()
                                .addGap(0, 21, Short.MAX_VALUE)
                                .addGroup(messages_box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(box1_autor)
                                        .addGroup(messages_box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addGroup(messages_box1Layout.createSequentialGroup()
                                                        .addComponent(box1_date)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(box1_hour))
                                                .addComponent(box1_scroll_body, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18))
                );


		return messages_box1;
	}

	public void expandAll(JTree tree) {
		int row =0;
		while (row < tree.getRowCount()) {
			tree.expandRow(row);
			row++;
		}
	}

	public JTable getGroup_own() {
		return group_own;
	}

	public JTable getGroup_other() {
		return group_other;
	}

	void majTableOneColumn(Set<String> l, String title, JTable table, JScrollPane sp) {
		Object data[][] =new Object[l.size()][1];
		int i =0;
		for (String str : l) {
			data[i][0] =str;
			i++;
		}

		String title2[] ={title};
//		JScrollPane jp =(JScrollPane) table.getParent();
		table =new JTable(data, title2);
		if (title.equals("own groups")) {
			group_own =table;
		}
		else {
			group_other =table;
		}

//		group_sown.setViewportView(table);
                sp.setViewportView(table);
//		jScrollPane2.setViewportView(table);
	}

	void majTableMessageUsersStatus(Message m) {
		Object data[][] =m.getUsersStatus();
		String title[] = {"user", "status"};

		messageUsersStatusTable =new JTable(data, title);
		messageUsersStatus.setViewportView(messageUsersStatusTable);
	}

//	void majGroupTable(Set<String> myGroup, Set<String> other) {
//		Object data[][] =new Object[myGroup.size()][1];
//		int i =0;
//		for (String str : myGroup) {
//			data[i][0] =str;
//		}
////		i =0;
////		for (String str : other) {
////			data[i][0] =str;
////		}
//		String title[] ={"myGroup"};
//		group_own =new JTable(data, title);
//
//                jScrollPane2.setViewportView(group_own);
//	}

	public JScrollPane getGroup_sown() {
		return group_sown;
	}

	public JScrollPane getGroup_sother() {
		return group_sother;
	}

	public String actualTicket() {
		String ticket ="";
		if (tree.getLastSelectedPathComponent() != null) {
			ticket =(String)tree.getLastSelectedPathComponent().toString();
			while (ticket.charAt(ticket.length() -1) !='(') ticket =ticket.substring(0, ticket.length() -1);
			ticket =ticket.substring(0, ticket.length() -2);
			System.out.println("ticket ='" +ticket +"'");
		}
		return ticket;
	}

	void receiveMessagesFromServer(List<Message> lm) {
		if (lm.size() == 1) {
			Message m =lm.get(0);
			String ticket =m.getTicket();
			
			if (ticket.equals(actualTicket())) {
				System.out.println("[InterfaceClient] buildPane");
				buildMessagesPane(ticket);
			}
			else {
				System.out.println("[InterfaceClient] majTree");
				majTree();
			}
		}
		else {
			majTree();
		}
	}

	public void setActualUser(String actualUser) {
		this.actualUser = actualUser;
	}

	public JTextArea getNewUser_console() {
		return newUser_console;
	}
        
	public static String get(String url) throws IOException{

		String reponse ="";
		URL oracle = new URL(url);
		URLConnection yc = oracle.openConnection();
            try (BufferedReader in = new BufferedReader(
                    new InputStreamReader(yc.getInputStream()))) {
                String inputLine;
                
                while ((inputLine = in.readLine()) != null)
                    reponse +=inputLine;
            }
		return reponse;
	}
	
	
}
